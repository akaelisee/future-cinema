// @ts-nocheck
import React, { useState, useEffect } from 'react'
import axios from 'axios'
import { Link } from 'react-router-dom'
import styled from 'styled-components'
import PropTypes from 'prop-types'
// import axios from '../services/axios'
// import request from '../services/requests'
// component
import { Loader } from '../components/loader'
// style
import { Banniere, Banner } from '../styles/Banniere'
import Col from '../styles/Col'
import Wrapper from '../styles/Wrapper'
import Rows from '../styles/Rows'
import { Card, Image, CardBody } from '../styles/Card'
// image
import Her from '../assets/img/heere.jpg'
import Him from '../assets/img/himee.jpg'
import banniereImg from '../assets/img/home.jpg'

const Home = () => {
  const [programmes, setProgrammes] = useState([])
  const [isLoader, setIsLoader] = useState(false)
  const [programmeSelected, setProgrammeSelected] = useState(null)
  const [placeSelected, setPlaceselected] = useState([])
  const fetchUrl = 'http://localhost:4000/admin/account/programmes-json'
  // const fetchUrl = ''
  const baseImage = process.env.REACT_APP_BASE_IMAGE
  const regex = / /gi
  const [formReservation, setFormReservation] = useState({
    num_place: '',
    client: '',
    program: ''
  })
  // const [place, setPlace] = useState('')

  useEffect(() => {
    axios
      .get(fetchUrl)
      .then(res => {
        console.log(res.data.results)
        setProgrammes(res.data.results)
        setIsLoader(true)
      })
      .catch(err => {
        console.log(err)
      })
  }, [fetchUrl])

  // const handleSubmit = e => {
  //   e.preventDefault()

  //   console.log(formReservation)
  // }

  // const selectedProgramme = programme => {
  //   setProgrammeSelected(programme)
  // }

  // const toggleSelectedPlace = numPlace => {
  //   if (placeSelected.indexOf(numPlace) === -1) {
  //     setPlaceselected([...placeSelected, parseInt(numPlace)])
  //   } else {
  //     setPlaceselected(
  //       placeSelected.filter(item => parseInt(item) !== parseInt(numPlace))
  //     )
  //   }
  // }

  // const NombreFunc = ({ programme }) => {
  //   let places = []

  //   for (let i = 0; i < programme.nombre; i++) {
  //     places.push(i)
  //   }

  //   return places.map((item, index) => (
  //     <span
  //       onClick={() => toggleSelectedPlace(index + 1)}
  //       key={index}
  //       style={{
  //         display: 'inline-block',
  //         padding: '15px',
  //         backgroundColor:
  //           programme.place_vip.split('-').indexOf((index + 1).toString()) ===
  //           -1
  //             ? '#aaa'
  //             : '#ff0',
  //         margin: '5px',
  //         border:
  //           (placeSelected.indexOf(index + 1) === -1 ? 0 : 2) + 'px solid #f00'
  //       }}
  //     ></span>
  //   ))
  // }

  // const compilePrice = () => {
  //   let total = 0

  //   placeSelected.forEach(element => {
  //     total +=
  //       programmeSelected.place_vip.split('-').indexOf(element.toString()) ===
  //       -1
  //         ? programmeSelected.price
  //         : programmeSelected.price_vip
  //   })

  //   return total
  // }

  // if (!isLoader) {
  //   return <Loader />
  // }

  return (
    // <Container>
    //   <div>
    //     {programmes.map(programme => (
    //       <div key={programme.id}>
    //         <p>
    //           <Link to={`/detail/${programme.id_programme}`}>
    //             {programme.title}
    //           </Link>
    //           ||
    //           <button onClick={() => selectedProgramme(programme)}>
    //             {programme.lib_salle}
    //           </button>
    //           * || {programme.date} || nombre : {programme.nombre} || palce_vip:{' '}
    //           {programme.place_vip}
    //         </p>
    //       </div>
    //     ))}
    //   </div>
    //   <br />
    //   <br />
    //   <br />
    //   <br />

    //   <div>
    //     <p> place </p>
    //     {programmeSelected ? (
    //       <NombreFunc programme={programmeSelected} />
    //     ) : null}
    //   </div>

    //   <div>{compilePrice()}</div>
    //   <br />
    //   <br />
    //   <br />
    //   <div>
    //     <p> form </p>
    //     <form onSubmit={e => handleSubmit(e)}>
    //       <div className='form-group'>
    //         <label> num Place </label>
    //         <input
    //           type='text'
    //           name='num_palce'
    //           value={placeSelected.join('-')}
    //         />
    //       </div>
    //       <div className='form-group'>
    //         <label> client </label>
    //         <input
    //           type='text'
    //           name='id_client'
    //           value={formReservation.client}
    //           onChange={e =>
    //             setFormReservation({
    //               ...formReservation,
    //               client: e.target.value
    //             })
    //           }
    //         />
    //       </div>
    //       <div className='form-group'>
    //         <label> programe </label>
    //         <input
    //           type='text'
    //           name='id_program'
    //           value={programmeSelected?.id_program}
    //         />
    //       </div>
    //       <input type='submit' />
    //     </form>
    //   </div>
    // </Container>
    <Container>
      <p> home</p>
    </Container>
  )
}

Home.propTypes = {
  login: PropTypes.object
}

// const mapStateToProps = state => ({
//   login: state.login.userLogin
// })

export default Home

const Container = styled.div`
  padding: 90px 0;
`
